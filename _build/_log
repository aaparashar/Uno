### Starting build.
<<<<<<< HEAD
# Target: Deck.mli.depends, tags: { extension:mli, file:Deck.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Deck.mli > Deck.mli.depends # cached
# Target: Deck.cmi, tags: { byte, compile, extension:mli, file:Deck.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o Deck.cmi Deck.mli # cached
# Target: Deck.ml.depends, tags: { extension:ml, file:Deck.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Deck.ml > Deck.ml.depends # cached
# Target: Deck.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Deck.cmo, file:Deck.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o Deck.cmo Deck.ml # cached
# Target: command.mli.depends, tags: { extension:mli, file:command.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o command.cmi command.mli # cached
# Target: command.ml.depends, tags: { extension:ml, file:command.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o command.cmo command.ml # cached
# Target: state.mli.depends, tags: { extension:mli, file:state.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules state.mli > state.mli.depends
# Target: state.cmi, tags: { byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o state.cmi state.mli
# Target: state.ml.depends, tags: { extension:ml, file:state.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o state.cmo state.ml
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules main.ml > main.ml.depends # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o main.cmo main.ml
+ ocamlfind ocamlc -c -o main.cmo main.ml
File "main.ml", line 9, characters 2-14:
Error: Unbound module ANSITerminal
=======
# Target: test.ml.depends, tags: { debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules test.ml > test.ml.depends
+ ocamlfind ocamldep -modules test.ml > test.ml.depends
File "test.ml", line 38, characters 8-17:
Error: Syntax error: operator expected.
>>>>>>> f84cc74e3a9cc724a31d4fdab5e4f8a10d1bb07d
Command exited with code 2.
# Compilation unsuccessful.
