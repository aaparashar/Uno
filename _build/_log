### Starting build.
# Target: Deck.mli.depends, tags: { package(oUnit), extension:mli, file:Deck.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules Deck.mli > Deck.mli.depends
# Target: Deck.cmi, tags: { package(oUnit), byte, compile, extension:mli, file:Deck.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -o Deck.cmi Deck.mli
# Target: Deck.ml.depends, tags: { package(oUnit), extension:ml, file:Deck.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules Deck.ml > Deck.ml.depends
# Target: Deck.cmo, tags: { package(oUnit), byte, compile, extension:cmo, extension:ml, file:Deck.cmo, file:Deck.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -o Deck.cmo Deck.ml
# Target: command.mli.depends, tags: { package(oUnit), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules command.mli > command.mli.depends
# Target: command.cmi, tags: { package(oUnit), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -o command.cmi command.mli
# Target: command.ml.depends, tags: { package(oUnit), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules command.ml > command.ml.depends
# Target: command.cmo, tags: { package(oUnit), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -o command.cmo command.ml
# Target: state.mli.depends, tags: { package(oUnit), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules state.mli > state.mli.depends
# Target: state.cmi, tags: { package(oUnit), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -o state.cmi state.mli
# Target: state.ml.depends, tags: { package(oUnit), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules state.ml > state.ml.depends
# Target: state.cmo, tags: { package(oUnit), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -o state.cmo state.ml
+ ocamlfind ocamlc -c -package oUnit -o state.cmo state.ml
File "state.ml", line 28, characters 7-17:
Error: Unbound constructor Valid_Move
Hint: Did you mean Invalid_Move?
Command exited with code 2.
# Compilation unsuccessful.
